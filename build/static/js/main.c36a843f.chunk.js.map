{"version":3,"sources":["components/Note.js","services/notes.js","App.js","index.js"],"names":["Note","note","toggleImportance","label","important","content","onClick","id","baseUrl","axios","get","then","res","data","post","put","App","useState","notes","setNotes","newNote","setNewNote","showAll","setShowAll","useEffect","noteService","initialNotes","notesToShow","filter","toggleImportanceOf","staleNote","find","updatedNote","returnedNote","updatedNotes","map","catch","err","console","log","onSubmit","evt","preventDefault","obj","date","Date","toISOString","Math","random","concat","type","value","onChange","e","target","ReactDOM","render","document","getElementById"],"mappings":"+JAYeA,EATF,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,KAAMC,EAAuB,EAAvBA,iBACdC,EAAQF,EAAKG,UAAY,qBAAuB,iBACtD,OACE,+BACGH,EAAKI,QADR,IACiB,wBAAQC,QAAS,kBAAMJ,EAAiBD,EAAKM,KAA7C,SAAmDJ,Q,gBCNlEK,EAAU,aAiBD,EAfA,WACX,OAAOC,IAAMC,IAAIF,GACZG,MAAK,SAAAC,GAAG,OAAIA,EAAIC,SAaV,EAVA,SAACA,GACZ,OAAOJ,IAAMK,KAAKN,EAASK,GACtBF,MAAK,SAAAC,GAAG,OAAIA,EAAIC,SAQV,EALA,SAACN,EAAIM,GAChB,OAAOJ,IAAMM,IAAN,UAAaP,EAAb,YAAwBD,GAAMM,GAChCF,MAAK,SAAAC,GAAG,OAAIA,EAAIC,SCiEVG,EA3EH,WACR,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAA8BF,mBAAS,gBAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KACA,EAA8BJ,oBAAS,GAAvC,mBAAOK,EAAP,KAAgBC,EAAhB,KAEAC,qBAAU,WACNC,IAEGd,MAAK,SAAAe,GACFP,EAASO,QAEjB,IAEF,IAAMC,EAAcL,EAAUJ,EAAQA,EAAMU,QAAO,SAAA3B,GAAI,OAAIA,EAAKG,aAuB1DyB,EAAqB,SAACtB,GAC1B,IAAMuB,EAAYZ,EAAMa,MAAK,SAAA9B,GAAI,OAAIA,EAAKM,KAAOA,KAC3CyB,EAAW,2BAAOF,GAAP,IAAkB1B,WAAY0B,EAAU1B,YAEzDqB,EACUlB,EAAIyB,GACXrB,MAAK,SAAAsB,GACJ,IAAMC,EAAehB,EAAMiB,KAAI,SAAAlC,GAC7B,OAAGA,EAAKM,KAAOA,EACN0B,EAEFhC,KAETkB,EAASe,MAEVE,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,OAG9B,OACA,gCACE,uCACA,8BACE,yBAAQ/B,QAAS,kBAAMiB,GAAYD,IAAnC,kBACQA,EAAU,YAAc,WAGlC,6BACGK,EAAYQ,KAAI,SAAAlC,GAAI,OACjB,cAAC,EAAD,CAAoBA,KAAMA,EAAMC,iBAAkB2B,GAAvC5B,EAAKM,SAGtB,uBAAMiC,SAhDQ,SAACC,GACbA,EAAIC,iBACJ,IAAMC,EAAM,CACRtC,QAASe,EACTwB,MAAM,IAAIC,MAAOC,cACjB1C,UAAW2C,KAAKC,SAAW,IAE/BvB,EACUkB,GACPhC,MAAK,SAAAsB,GACJd,EAASD,EAAM+B,OAAOhB,IACtBZ,EAAW,OAEZe,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,OAmC9B,UACI,uBAAO9B,GAAG,YAAY2C,KAAK,OAAOC,MAAO/B,EAASgC,SArDzC,SAACC,GACZhC,EAAWgC,EAAEC,OAAOH,UAqDlB,wBAAQD,KAAK,SAAb,yBCtERK,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.c36a843f.chunk.js","sourcesContent":["\nimport React from 'react'\n\nconst Note = ({ note, toggleImportance }) => {\n  const label = note.important ? 'make not important' : 'make important';\n  return (\n    <li>\n      {note.content} <button onClick={() => toggleImportance(note.id)}>{label}</button>\n    </li>\n  )\n}\n\nexport default Note","import axios from 'axios'\nconst baseUrl = '/api/notes'\n\nconst getAll = () => {\n    return axios.get(baseUrl)\n        .then(res => res.data)\n}\n\nconst create = (data) => {\n    return axios.post(baseUrl, data)\n        .then(res => res.data);\n}\n\nconst update = (id, data) => {\n    return axios.put(`${baseUrl}/${id}`, data)\n        .then(res => res.data)\n}\n\nexport default {getAll, create, update}","import React, {useState, useEffect} from \"react\";\nimport Note from './components/Note'\nimport noteService from './services/notes'\n\n\nconst App = () => {\n    const [notes, setNotes] = useState([]);\n    const [newNote, setNewNote] = useState('a newnote...');\n    const [showAll, setShowAll] = useState(true);\n\n    useEffect(() => {\n        noteService\n          .getAll()\n          .then(initialNotes => {\n              setNotes(initialNotes);\n        })\n    },[])\n\n    const notesToShow = showAll ? notes : notes.filter(note => note.important);\n\n    const change = (e) => {\n        setNewNote(e.target.value);\n    }\n  \n    const addNote = (evt) => {\n        evt.preventDefault();\n        const obj = {\n            content: newNote,\n            date: new Date().toISOString(),\n            important: Math.random() < 0.5\n        }\n        noteService\n          .create(obj)\n          .then(returnedNote => {\n            setNotes(notes.concat(returnedNote));\n            setNewNote('');\n          })\n          .catch(err => console.log(err));\n        \n    }\n\n    const toggleImportanceOf = (id) => {\n      const staleNote = notes.find(note => note.id === id)\n      const updatedNote = {...staleNote, important: !staleNote.important}\n\n      noteService\n        .update(id, updatedNote)\n        .then(returnedNote => {\n          const updatedNotes = notes.map(note => {\n            if(note.id === id) {\n              return returnedNote;\n            }\n            return note;\n          })\n          setNotes(updatedNotes);\n        })\n        .catch(err => console.log(err));\n    }\n\n    return (\n    <div>\n      <h1>Notes</h1>\n      <div>\n        <button onClick={() => setShowAll(!showAll)}>\n          show {showAll ? 'important' : 'all' }\n        </button>\n      </div>\n      <ul>\n        {notesToShow.map(note => \n            <Note key={note.id} note={note} toggleImportance={toggleImportanceOf}/>\n        )}\n      </ul>\n      <form onSubmit={addNote}>\n          <input id='userInput' type=\"text\" value={newNote} onChange={change}/>\n          <button type=\"submit\">save</button>\n      </form>\n    </div>\n  )\n}\n\nexport default App\n","import ReactDOM from 'react-dom';\nimport App from './App'\n\n  \n  ReactDOM.render(\n    <App />,\n    document.getElementById('root')\n  )\n\n"],"sourceRoot":""}